services:
  app:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/controlparental:${IMAGE_TAG:-latest}
    env_file:
      - .env.production
    environment:
      DB_HOST: mysql
      APP_KEY: ${APP_KEY}
    volumes:
      - storage-data:/var/www/storage
      - public-volume:/var/www/public-shared
    networks: [app-network]
    depends_on: [mysql]
    restart: unless-stopped
    command: >
      sh -c "
        rm -f /var/www/public/hot &&
        cp -r /var/www/public/* /var/www/public-shared/ 2>/dev/null || true &&
        docker-php-entrypoint php-fpm
      "

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - public-volume:/var/www/public:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on: [app]
    networks: [app-network]
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks: [app-network]
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:latest
    depends_on: [mysql]
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    networks: [app-network]
    ports:
      - "8080:80"
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  public-volume:
  storage-data:
